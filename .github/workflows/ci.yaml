name: ci
on: pull_request
jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run linters
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
          args: --timeout=3m
  go-test:
    strategy:
      matrix:
        go-version: [1.22.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - name: go tests
        run: go test -v -covermode=count -json ./... > test.json
      - name: annotate go tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.5.1
        with:
          test-results: test.json

  test:
    runs-on: ubuntu-latest
    env:
      BATON_LOG_LEVEL: debug
      # Add any environment variables needed to run baton-jira-datacenter
      BATON_INSTANCE_URL: 'http://localhost:8080'
      BATON_ACCESS_TOKEN: 'secret_token'
      # The following parameters are passed to grant/revoke commands
      CONNECTOR_GRANT: 'grant:entitlement:group:1234:member:user:9876'
      CONNECTOR_ENTITLEMENT: 'entitlement:group:1234:member'
      CONNECTOR_PRINCIPAL: 'user:9876'
      CONNECTOR_PRINCIPAL_TYPE: 'user'
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.x
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build baton-jira-datacenter
        run: go build ./cmd/baton-jira-datacenter
      # - name: Run baton-jira-datacenter
      #   run: ./baton-jira-datacenter
      - name: Install baton
        run: ./scripts/get-baton.sh && mv baton /usr/local/bin